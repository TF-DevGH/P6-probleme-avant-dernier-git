/*  : doit toujours √™tre coll√© √† <D√©finition> [Pour la lisibilit√©]

‚ùì  : Signifie <D√©finition>
üõà  : Signifie <Information>
‚Ä¢   : Point sur l'<Explication>
‚Üì : Toujours mettre sous la 1√®re ligne de la derni√®re <Explication>,de la mani√®re qui suit :
*/

/*/
D√©finitions des termes :
‚Ä¢ app.use = middleware.
‚Ä¢ req = requ√™te (n√©cessaire pour tout type de requ√™te).
‚Ä¢ res = r√©ponse.
‚Ä¢ next = fonction passant l'√©xecution au middleware d'apr√®s.
‚Ä¢ .json = m√©thode.

D√©finitions globales :
- app.use : La m√©thode app.use() vous permet d'attribuer un middleware √† une route sp√©cifique de votre application.
- CORS (Cross Origin Resource Sharing) : syst√®me de s√©curit√© qui, par d√©faut, bloque les appels HTTP entre des serveurs diff√©rents,
ce qui emp√™che donc les requ√™tes malveillantes d'acc√©der √† des ressources sensibles.

Notes importantes :
1. Pour permettre des requ√™tes cross-origin (et emp√™cher des erreurs CORS), des headers sp√©cifiques de contr√¥le d'acc√®s
doivent √™tre pr√©cis√©s pour tous vos objets de r√©ponse.
2.Veillez √† placer la route POST au-dessus du middleware pour les requ√™tes GET, car la logique GET interceptera actuellement toutes les requ√™tes envoy√©es √† votre endpoint
 /api/stuff,√©tant donn√© qu'on ne lui a pas indiqu√© de verbe sp√©cifique. Placer la route POST au-dessus interceptera les requ√™tes POST,
 en les emp√™chant d'atteindre le middleware GET.
 _
 _
 _
/*/
// Peut poser un PROBLEME :
const express = require('express');
const cors = require('cors');
const path = require('path');
const mongoose = require('mongoose');

const app = express();

const sauceRoutes = require('./routes/sauceRoutes'); // Utilisez un nom plus appropri√©, comme "sauceRoutes"
const userRoutes = require('./routes/user');

mongoose.connect('mongodb+srv://admin:1234@atlascluster.qx9a4rc.mongodb.net/?retryWrites=true&w=majority',
  { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Connexion √† MongoDB r√©ussie !'))
  .catch(() => console.log('Connexion √† MongoDB √©chou√©e !'));

app.use(cors());
app.use(express.json());

app.use((req, res, next) => {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
  next();
});

app.use('/images', express.static(path.join(__dirname, 'images')));

// Utilisez un chemin plus appropri√©, par exemple '/api/sauces'
app.use('/api/sauces', sauceRoutes);
app.use('/api/auth', userRoutes);

module.exports = app;
